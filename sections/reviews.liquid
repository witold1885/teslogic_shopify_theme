<link rel="stylesheet" type="text/css" href="{{ 'reviews.css' | asset_url }}">
<link rel="stylesheet" type="text/css" href="{{ 'reviews-responsive.css' | asset_url }}">

{% style %}	
.reviews {
/*	background: url({{ 'reviews_bg.png' | asset_url }}), -666.816px -1673.512px / 296.268% 182.468% no-repeat, linear-gradient(180deg, #403CF7 -7.9%, #403CF7 129.81%);*/
	background: url({{ 'reviews_bg_x2.png' | asset_url }}), linear-gradient(180deg, #403CF7 -7.9%, #403CF7 129.81%);
	background-size: cover;
	background-position: center;
}
.spr-form-review-rating .spr-icon-star::before {
	content: url({{ 'star-form-blue.svg' | asset_url }});
}
.spr-form-review-rating .spr-icon-star-empty::before {
	content: url({{ 'star-form-grey.svg' | asset_url }});
}
.spr-form-review-rating .spr-icon-star-hover::before {
	content: url({{ 'star-form-blue.svg' | asset_url }});
}
{% endstyle %}

<!-- <div id="multipleReviews"></div> -->
<div id="reviewsWrap" class="reviews">
	<div class="reviews-wrap">
		<div class="reviews-top">
			<div class="reviews-top-left">
				<div class="reviews-top-supinfo">
					<div class="reviews-top-supinfo-stars" id="totalRatingStars"></div>
					<div class="reviews-top-supinfo-text">Teslogic Reviews</div>					
				</div>
				<div class="reviews-title">
					Positive feedback from clients â€” <br>
					one of our main tasks
				</div>
			</div>
			<div class="reviews-top-right">
				<div class="reviews-rating-overall-data">
					<div class="reviews-rating-overall-title">Overall rating</div>
					<div id="totalRatingValue" class="reviews-rating-overall-data-value"></div>
					<div id="totalReviewsCount" class="reviews-rating-stats-total"></div>
				</div>
				<div class="reviews-rating-overall-data-star">
					<img src="{{ 'star.svg' | asset_url }}" />
				</div>
			</div>			
		</div>
		<div class="reviews-list-wrap">
			<div class="reviews-list" id="multipleReviews">
				<div class="reviews-list-container reviews-list-container-1"></div>
				<div class="reviews-list-container reviews-list-container-2"></div>
				<div class="reviews-list-container-mobile"></div>
			</div>
			<div class="reviews-list-scrollbar">
				<div class="reviews-list-scrollbar-thumb"></div>
			</div>
		</div>
		<div class="reviews-pagination"></div>
		<div class="reviews-bottom">
			<div class="reviews-bottom-text">
				Already own Teslogic?
			</div>
			<button id="showForm">Write a review</button>
		</div>
	</div>
</div>

<div class="reviews-form-shadow">
	<div id="reviewsFormWrap" class="reviews-form-wrap">
		<img class="reviews-form-close" src="{{ 'close-review-form.svg' | asset_url }}">
		<form class="reviews-form">
			
		</form>
	</div>
</div>

<script type="text/javascript">
	var starMobile = '{{ 'star-mobile.svg' | asset_url }}';
	var formLoaded = false;
	$(document).ready(async function() {
		const getReviewsUrl = 'https://api.teslogic.co/get-reviews'
		const sendReviewUrl = 'https://api.teslogic.co/send-review'

        const response = await fetch(getReviewsUrl)
        const data = await response.json()
        const { totalCount, avgRating, reviews } = data

		document.getElementById('totalRatingValue').innerText = Number(avgRating).toFixed(2)
		document.getElementById('totalReviewsCount').innerText = `${totalCount} reviews`

		let i = 1
		let reviewsHtml = []
		for (const review of reviews) {
			if (!review.published) continue
			const reviewDate = new Date(review.created_at)
			const formattedDate = reviewDate.toLocaleDateString('en-US', { month: 'short', day: '2-digit', year: 'numeric' })
			let starsHtml = ''
			for (let s = 1; s <= 5; s++) {
				if (s <= review.rating) starsHtml += '<i class="spr-icon spr-icon-star" aria-hidden="true"></i>'
				else starsHtml += '<i class="spr-icon spr-icon-star-empty" aria-hidden="true"></i>'
			}
	        const reviewHtml = `
	        	<div class="reviews-list-item product-review" id="review-${i}">
	        		<div class="reviews-list-item-top">
		        		<div class="reviews-list-item-top-left">
		        			<div class="reviews-list-item-author">${review.reviewer.name}</div>
		        			<div class="reviews-list-item-stars product-review-stars">${starsHtml}</div>
		        			<div class="reviews-list-item-stars-mobile product-review-stars">
		        				<img class="reviews-list-item-stars-mobile-icon" src="${starMobile}" />
		        				<div class="reviews-list-item-stars-mobile-value">${review.rating}</div>
		        			</div>
		        		</div>
	        			<div class="reviews-list-item-date">${formattedDate}</div>
	        		</div>
	        		<div class="reviews-list-item-text product-review-text">${review.body}</div>
	        		<div class="reviews-list-item-expand"><img src="{{ 'reviews-expand.svg' | asset_url }}"></div>
	        	</div>
	        `
	        reviewsHtml.push(reviewHtml)
	        document.querySelector('.reviews-list-container-mobile').insertAdjacentHTML('beforeend', reviewHtml)
	        i++
		}

		const pageSize = 10
		const pagesCount = Math.ceil(reviewsHtml.length / pageSize)

		paginate()

		function paginate (page = 1) {
			const startIndex = (page - 1) * pageSize;
			const endIndex = startIndex + pageSize;
			pageReviewsHtml = reviewsHtml.slice(startIndex, endIndex);

			$('.reviews-list-container').each(function () {
				$(this).empty()
			})

			let r = 1
			for (let reviewHtml of pageReviewsHtml) {
		        if (r % 2 == 0) {	        	
		        	document.querySelector('.reviews-list-container-2').insertAdjacentHTML('beforeend', reviewHtml)
		        }
		        else {
		        	document.querySelector('.reviews-list-container-1').insertAdjacentHTML('beforeend', reviewHtml)
		        }
	        	r++
	        }

	        $('.reviews-pagination').empty()

	        const prevPage = page - 1
	        const nextPage = page + 1

			let pagination = `<div class="reviews-pagination-item reviews-pagination-item-prev ${prevPage <= 1 ? 'reviews-pagination-item-disabled' : ''}" data-page="${prevPage}">prevPage</div>`

			for (let p = 1; p <= pagesCount; p++) {
				pagination += `<div class="reviews-pagination-item ${p == page ? 'reviews-pagination-item-active' : ''}" data-page="${p}">${p}</div>`
			}

			pagination += `<div class="reviews-pagination-item reviews-pagination-item-next ${nextPage >= pagesCount ? 'reviews-pagination-item-disabled' : ''}" data-page="${nextPage}">nextPage</div>`

			$('.reviews-pagination').html(pagination)
		}

		$(document).on('click', '.reviews-pagination-item', function() {
			if (!$(this).hasClass('reviews-pagination-item-active') && !(this).hasClass('reviews-pagination-item-disabled')) {
				let page = $(this).data('page')
				paginate(page)
		        $('html, body').animate({
		            scrollTop: $('#reviewsWrap').offset().top
		        }, 500)
			}
		})

		var scrollbarThumbWidth = 56

	  	var content = document.querySelector('.reviews-list-container-mobile');
		var scrollbar = document.querySelector('.reviews-list-scrollbar');
	  	var scrollbarThumb = document.querySelector('.reviews-list-scrollbar-thumb');

		scrollbar.addEventListener('mousedown', function (event) {
		  var offsetX = event.clientX - scrollbar.getBoundingClientRect().left;
		  var scrollLeftPercentage = (offsetX / scrollbar.clientWidth) * 100;
		  content.scrollLeft = (content.scrollWidth - content.clientWidth) * (scrollLeftPercentage / 100);
		  updateScrollbarThumbPosition();
		});

		scrollbarThumb.addEventListener('mousedown', function (event) {
		  var startX = event.clientX;
		  var startThumbLeft = scrollbarThumb.offsetLeft;

		  function handleMouseMove(event) {
		    var deltaX = event.clientX - startX;
		    var newThumbLeft = startThumbLeft + deltaX;

		    newThumbLeft = Math.max(0, Math.min(newThumbLeft, scrollbar.clientWidth));

		    var newThumbLeftPercentage = (newThumbLeft / scrollbar.clientWidth) * 100;

		    scrollbarThumb.style.left = `calc(${newThumbLeftPercentage}% - ${scrollbarThumbWidth * newThumbLeftPercentage / 100}px)`;
		    content.scrollLeft = (content.scrollWidth - content.clientWidth) * (newThumbLeftPercentage / 100);
		  }

		  function handleMouseUp() {
		    document.removeEventListener('mousemove', handleMouseMove);
		    document.removeEventListener('mouseup', handleMouseUp);
		  }

		  document.addEventListener('mousemove', handleMouseMove);
		  document.addEventListener('mouseup', handleMouseUp);
		});

	  content.addEventListener('scroll', function () {
	  	updateScrollbarThumbPosition()
	  });

		function updateScrollbarThumbPosition() {
		  let scrollLeftPercentage = (content.scrollLeft / (content.scrollWidth - content.clientWidth)) * 100;
		  scrollbarThumb.style.left = `calc(${scrollLeftPercentage}% - ${scrollbarThumbWidth * scrollLeftPercentage / 100}px)`;
		}

		const slider = document.querySelector('.reviews-list-container-mobile');
		let isDown = false;
		let startX;
		let scrollLeft;

		slider.addEventListener('mousedown', (e) => {
		  isDown = true;
		  slider.classList.add('active');
		  startX = e.pageX - slider.offsetLeft;
		  scrollLeft = slider.scrollLeft;
		});
		slider.addEventListener('mouseleave', () => {
		  isDown = false;
		  slider.classList.remove('active');
		});
		slider.addEventListener('mouseup', () => {
		  isDown = false;
		  slider.classList.remove('active');
		});
		slider.addEventListener('mousemove', (e) => {
		  if(!isDown) return;
		  e.preventDefault();
		  const x = e.pageX - slider.offsetLeft;
		  const walk = (x - startX) * 1; //scroll-fast
		  slider.scrollLeft = scrollLeft - walk;
		  // console.log(walk);
		});

      	var reviewsContainer = document.querySelector('.reviews-list-container-mobile');
		var reviewItems = document.querySelectorAll('.reviews-list-item');

		var column1Height = 0;
		var column2Height = 0;
		var rowGap = 24;
		var paddingBottom = 76;
		var maxMobileItemHeight = 440 * window.innerWidth / 375;

		reviewItems.forEach(function(item, index) {
		  var itemHeight = item.offsetHeight;
		  if (window.innerWidth < 575) {
			  if (itemHeight >= maxMobileItemHeight) {
			  	let itemText = item.querySelector('.reviews-list-item-text');
					itemText.style.background = 'linear-gradient(180deg, #666 73.8%, rgba(102, 102, 102, 0.00) 100%)';
					itemText.style.backgroundClip = 'text';
					itemText.style.webkitBackgroundClip = 'text';
					itemText.style.webkitTextFillColor = 'transparent';
					item.setAttribute('data-collapsed', 'true');
					item.querySelector('.reviews-list-item-expand').style.display = 'block';
			  }
			  else {
					item.querySelector('.reviews-list-item-expand').style.display = 'none';
			  }
		  }
		})

		$(document).on('click', '.reviews-list-item', function() {
			let collapsed = $(this).data('collapsed');
		  let itemText = $(this).find('.reviews-list-item-text');
			if (collapsed == true) {
				$(itemText).css('background', 'unset');
				$(itemText).css('background-clip', 'unset');
				$(itemText).css('-webkit-background-clip', 'unset');
				$(itemText).css('-webkit-text-fill-color', 'unset');
				$(this).css('max-height', 'unset');
				$(this).data('collapsed', false);
				return;
			}
			else if (collapsed == false) {
				$(itemText).css('background', 'linear-gradient(180deg, #666 73.8%, rgba(102, 102, 102, 0.00) 100%)');
				$(itemText).css('background-clip', 'text');
				$(itemText).css('-webkit-background-clip', 'text');
				$(itemText).css('-webkit-text-fill-color', 'transparent');
				$(this).css('max-height', 'calc(440 * 100vw / 375)');
				$(this).data('collapsed', true);
				return;
			}
		})

		if (!formLoaded) {
			$('#reviewsFormWrap')
				.find('form')
				.addClass('new-review-form')
				.attr('id', 'new-review-form_8143253733590')

			let formHtml = `						
		        <input type="hidden" name="review[rating]">
		        <input type="hidden" name="product_id" value="8143253733590">
		        <input id="review_title_8143253733590" class="review-form-title" type="hidden" name="review[title]" value="">

		        <div class="reviews-form-top">
		    		<h3 class="spr-form-title">Write a review</h3>
		    		<div class="reviews-form-field spr-form-review-rating">
		    			<div class="spr-form-review-rating-title">Rate:</div>
		    			<div>
				          	<a href="#" onclick="SPR.setRating(this);return false;" class="spr-icon spr-icon-star spr-icon-star-empty" data-value="1" aria-label="1 of 5 stars">&nbsp;</a>
				          	<a href="#" onclick="SPR.setRating(this);return false;" class="spr-icon spr-icon-star spr-icon-star-empty" data-value="2" aria-label="2 of 5 stars">&nbsp;</a>
				          	<a href="#" onclick="SPR.setRating(this);return false;" class="spr-icon spr-icon-star spr-icon-star-empty" data-value="3" aria-label="3 of 5 stars">&nbsp;</a>
				          	<a href="#" onclick="SPR.setRating(this);return false;" class="spr-icon spr-icon-star spr-icon-star-empty" data-value="4" aria-label="4 of 5 stars">&nbsp;</a>
				          	<a href="#" onclick="SPR.setRating(this);return false;" class="spr-icon spr-icon-star spr-icon-star-empty" data-value="5" aria-label="5 of 5 stars">&nbsp;</a>
				        </div>
		        	</div>
		        </div>

		        <div class="reviews-form-body">
		        	<div class="reviews-form-field spr-form-contact-name">	        		
          				<label class="spr-form-label" for="review_author_8143253733590">Name</label>
          				<input class="spr-form-input spr-form-input-text " id="review_author_8143253733590" type="text" name="review[author]" value="" placeholder="Enter your name">
        
	        			<div class="reviews-form-field-error">Please, fill in the field</div>
	        		</div>

	        		<div class="reviews-form-field spr-form-contact-email">        			
          				<label class="spr-form-label" for="review_email_8143253733590">Email</label>
          				<input class="spr-form-input spr-form-input-email " id="review_email_8143253733590" type="email" name="review[email]" value="" placeholder="john.smith@example.com">
        
	        			<div class="reviews-form-field-error">Please, fill in the field</div>
	        		</div>

	        		<div class="reviews-form-field spr-form-review-body">	        		
        				<label class="spr-form-label" for="review_body_8143253733590">Review</label>
				        <div class="spr-form-input">
				          	<textarea class="spr-form-input spr-form-input-textarea " id="review_body_8143253733590" data-product-id="8143253733590" name="review[body]" rows="10" placeholder="Write your comments here"></textarea>
				        </div>
      
	        			<div class="reviews-form-field-error">Please, fill in the field</div>
	        		</div>
		        </div>

		        <div class="reviews-form-actions">
		        	<button type="button" id="send-feedback" class="spr-button spr-button-primary button button-primary btn btn-primary">Send feedback</button>
		        </div>
			`
			$('#reviewsFormWrap').find('form').html(formHtml)
			formLoaded = true
		}

		$('#showForm').on('click', function() {
			$('.reviews-form-shadow').css('display', 'flex')
		})
		$('.reviews-form-close').on('click', function() {
			$('.reviews-form-shadow').css('display', 'none')
		})

		$(document).on('click', '.spr-form-review-rating a.spr-icon-star', function(e) {
			window.newReviewRating = $(this).data('value')
		})

		$(document).on('keydown', '.spr-form-input', function(e) {
			$(this).parents('.reviews-form-field').find('.reviews-form-field-error').hide()
		})

		$(document).on('click', '#send-feedback', async function(e) {
			e.preventDefault()

			const form = $('#reviewsFormWrap').find('form')
			const product_id = $(form).find('input[name="product_id"]').val()

			const name = $(`#review_author_${product_id}`).val()
			if (!name) {
				$(form).find('.spr-form-contact-name').find('.reviews-form-field-error').show()
				return
			}

			const email = $(`#review_email_${product_id}`).val()
			if (!email) {
				$(form).find('.spr-form-contact-email').find('.reviews-form-field-error').show()
				return
			}

			const body = $(`#review_body_${product_id}`).val()
			if (!body) {
				$(form).find('.spr-form-review-body').find('.reviews-form-field-error').show()
				return
			}

			const rating = window.newReviewRating
			if (!rating) {
				return
			}

			const sendBody = { id: product_id, name, email, rating, body }

	        const response = await fetch(sendReviewUrl, {
	            method: 'post',
	            body: JSON.stringify(sendBody),
	            headers: {'Content-Type': 'application/json'}
	        })
	        const data = await response.json()
	        if (response.status == 200) {
	        	$('.reviews-form-shadow').css('display', 'none')
	        	window.location.reload(true)
	        }
	        else {
	        	console.log(data)
	        }
		})
	})
</script>